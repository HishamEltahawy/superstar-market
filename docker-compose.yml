# setup services 
version: '3.8'

services:
  django:
    container_name: django
    build:
      context: .
    command: gunicorn ProjectFiles.wsgi:application --bind 0.0.0.0:8000
    ports:
      - "8000:8000"
    volumes:
      - .:/app
      - static_volume:/app/static:delegated
      - media_volume:/app/media:delegated
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_healthy
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    networks:
      - app-network

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "16379:6379"  # Using port 16379 externally
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 30s
      retries: 5
    networks:
      - app-network
    command: redis-server --appendonly yes

  celery:
    container_name: celery
    build:
      context: .
    command: celery -A ProjectFiles worker -l INFO
    volumes:
      - .:/app
    env_file:
      - .env
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - app-network

  nginx:
    container_name: nginx
    image: nginx:stable-alpine
    ports:
      - "8080:80" #http
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/app/static
      - media_volume:/app/media
    depends_on:
      - django
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  static_volume:
  media_volume:
